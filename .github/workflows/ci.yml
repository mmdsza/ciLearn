# .github/workflows/ci.yml

name: CI Pipeline

# 1. Trigger the workflow on pushes to the main branch
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # 2. Define a single job called "build-and-test"
  build-and-test:
    runs-on: ubuntu-latest # Use a standard Linux runner

    steps:
      # 3. Step to check out your repository's code
      - name: Check out code
        uses: actions/checkout@v4

      # 4. Step to set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 5. Step to install uv
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          cache-key: "uv-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('pyproject.toml') }}"

      # 6. Step to install dependencies using uv
      - name: Install dependencies
        run: uv venv && source .venv/bin/activate && pip install -e .[test]

      # 7. Step to run the tests using pytest
      - name: Run tests
        run: pytest -v src/
  
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"	
          cache-key: "uv-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('pyproject.toml') }}"
      - name: Install dependencies
        run: uv venv && source .venv/bin/activate && pip install -e .[test]
      - name: Run ruff linter
        run: ruff check .
      - name: Run ruff formatter check
        run: ruff format --check .